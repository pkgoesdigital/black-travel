{%- comment -%}
{
  "pack_name": "Newsletter with text",
  "pack_author": "Design Packs",
  "pack_version": "1.0.0",
  "pack_folder": "section",
  "pack_type": "dynamic",
  "pack_tags": ["section", "parallax"],
  "pack_description": ""
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- unless content_for_header contains 'design_packs_file.js' -%}
  {%- if request.design_mode -%}
    <div class="dsgn-pck__no-app-warning">
      <div class="dsgn-pck__no-app-warning-background">
      </div>
      <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
        <p><strong>WARNING!</strong> This section or template will not display properly without the <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a> app installed. Please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with any questions.</p>
      </div>
    </div>
  {%- endif -%}
  {%- break -%}
{%- endunless-%}

{%- comment -%} Color: check if color is set to transparent {%- endcomment -%}
{%- assign background_alpha = section.settings.background_color | color_extract: 'alpha' -%}
{%- assign button_alpha = section.settings.button_background_color | color_extract: 'alpha' -%}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{%- comment -%} Images: all placeholders {%- endcomment -%}
{%- assign placeholder_image_id = 'PSie8BkuB0w' -%}

{%- comment -%} Images: responsive image sizes {%- endcomment -%}
{%- capture background_srcset -%}
  {{ section.settings.background_image | img_url: '5000x' }} 5000w,
  {{ section.settings.background_image | img_url: '4500x' }} 4500w,
  {{ section.settings.background_image | img_url: '4000x' }} 4000w,
  {{ section.settings.background_image | img_url: '3500x' }} 3500w,
  {{ section.settings.background_image | img_url: '3000x' }} 3000w,
  {{ section.settings.background_image | img_url: '2500x' }} 2500w,
  {{ section.settings.background_image | img_url: '2000x' }} 2000w,
  {{ section.settings.background_image | img_url: '1800x' }} 1800w,
  {{ section.settings.background_image | img_url: '1600x' }} 1600w,
  {{ section.settings.background_image | img_url: '1400x' }} 1400w,
  {{ section.settings.background_image | img_url: '1200x' }} 1200w,
  {{ section.settings.background_image | img_url: '1000x' }} 1000w,
  {{ section.settings.background_image | img_url: '800x' }} 800w,
  {{ section.settings.background_image | img_url: '600x' }} 600w,
  {{ section.settings.background_image | img_url: '400x' }} 400w,
  {{ section.settings.background_image | img_url: '200x' }} 200w
{%- endcapture -%}

{%- comment -%} Text: custom font_picker values {%- endcomment -%}
{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- comment -%} CSS {%- endcomment -%}
<style>
{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  {%- capture main_font -%}{{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }}{%- endcapture -%}
  {%- capture heading_font -%}{{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }}{%- endcapture -%}
{%- endif -%}

#DP--{{ section.id }} {
  background-size: cover;
  position: relative;
  font-family: {{ main_font }};
  color: {{ section.settings.text_color }};
  background-color: {%- if background_alpha != 0 -%}{{ section.settings.background_color }}{%- endif -%};
}

#DP--{{ section.id }} .dsgn-pck__background::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 1;
  background-color: {%- if background_alpha != 0 -%}{{ section.settings.background_color | color_modify: 'alpha', 0.6 }}{%- endif -%};
}

#DP--{{ section.id }} .dsgn-pck__background > img {
  object-position: {{ section.settings.focal_point }};
}

#DP--{{ section.id }} .dsgn-pck__sizer--newsletter {
  z-index: 2;
  position: relative;
}

#DP--{{ section.id }} .dsgn-pck__newsletter__form-column {
  flex: 1 0 50%;
  padding: 40px;
}

#DP--{{ section.id }} .dsgn-pck__newsletter__content {
  flex: 1 0 50%;
  padding: 40px;
  position: relative;
  align-items: center;
}

#DP--{{ section.id }} .dsgn-pck__newsletter__content::after {
  content: '';
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  height: 100%;
  width: 1px;
  z-index: 1;
  background-color: {{ section.settings.text_color }};
  {%- if section.settings.form_position == 'right' -%}
    left: 100%;
  {%- else -%}
    left: 0;
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__heading {
  font-size: clamp(16px, {{ section.settings.text_size | times: 0.015 }}em, 2em);
  {%- if section.settings.override_theme_font != blank -%}
  font-family: {{ heading_font }};
  font-weight: {{ section.settings.heading_font.weight }};
  font-style: {{ section.settings.heading_font.style }};
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__text {
  font-size: {{ section.settings.text_size | times: 0.01 }}em;
  {%- if section.settings.override_theme_font != blank -%}
  font-family: {{ main_font }};
  font-weight: {{ section.settings.main_font.weight }};
  font-style: {{ section.settings.main_font.style }};
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__newsletter__form {
  width: 100%;
}

#DP--{{ section.id }} .dsgn-pck__newsletter__form-text {
  color: inherit;
  font-size: {{ section.settings.text_size | times: 0.01 }}em;
}

#DP--{{ section.id }} .dsgn-pck__newsletter__form input {
  margin: unset;
  width: 100%;
  margin-top: 10px;
  padding: 0.8em;
  font-size: {{ section.settings.text_size | times: 0.01 }}em;
}

#DP--{{ section.id }} .dsgn-pck__newsletter__form input[type="submit"]  {
  margin-top: 1.2em
}

#DP--{{ section.id }} .dsgn-pck__newsletter__form input[type="text"],
#DP--{{ section.id }} .dsgn-pck__newsletter__form input[type="email"] {
  padding: 0.8em;
  background: transparent;
  border: thin solid {{ section.settings.text_color }};
  color: {{ section.settings.text_color }};
  {%- if section.settings.override_theme_font != blank -%}
  font-family: {{ main_font }};
  font-weight: {{ section.settings.main_font.weight }};
  font-style: {{ section.settings.main_font.style }};
  {%- endif -%}
}

#DP--{{ section.id }} input::placeholder {
  opacity: 0.6;
  color: {{ section.settings.text_color }};
  {%- if section.settings.override_theme_font != blank -%}
  font-family: {{ main_font }};
  font-weight: {{ section.settings.main_font.weight }};
  font-style: {{ section.settings.main_font.style }};
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__newsletter__form input:first-child {
  margin-top: 0;
}

#DP--{{ section.id }} .dsgn-pck__newsletter__button {
  border: none;
  transition: all 0.3s ease-in-out;
  border: thin solid;
  border-radius: {{ section.settings.button_radius }}px;
  color: {{ section.settings.button_label_color }};
  border-color: {%- if button_alpha != 0 -%}{{ section.settings.button_background_color }}{%- else -%}{{ section.settings.button_label_color }}{%- endif -%};
  background-color: {{ section.settings.button_background_color }};
  {%- if section.settings.override_theme_font != blank -%}
  font-family: {{ main_font }};
  font-weight: {{ section.settings.main_font.weight }};
  font-style: {{ section.settings.main_font.style }};
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__newsletter__button:hover {
  opacity: 1;
  {%- if button_alpha != 0 -%}
  background-color: {{ section.settings.button_background_color | color_darken: 10 }};
  border-color: transparent;
  {%- else -%}
  background-color: {{ section.settings.button_label_color | color_modify: 'alpha', 0.1 }}
  {%- endif -%};
}


/* Animation */
{%- if section.settings.animation != 'none' -%}
  #DP--{{ section.id }}.dsgn-pck__animation-applied [style*="--dsgn-pck-animate"] {
    animation-name: dsgn-pck__animation--{{ section.settings.animation }};
  }
{%- else -%}
  #DP--{{ section.id }} [style*="--dsgn-pck-animate"] {
    opacity: 1;
  }
{% endif %}

/* Layout */
#DP--{{ section.id }} {
  margin-top: {{ section.settings.outer_margin }}px;
  margin-bottom: {{ section.settings.outer_margin }}px;
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
  width: {{ section.settings.base_width }}%;
  max-width: {{ max_width }};
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  flex-wrap: wrap;
}

#DP--{{ section.id }} .dsgn-pck__flex > .dsgn-pck__column {
  flex: 1 0 auto;
  z-index: 3;
  width: 50%;
}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Large desktop */
@media (min-width: 1200px) {

}

/* Portrait tablet to landscape and desktop */
@media (min-width: 768px) and (max-width: 979px) {

}

/* Landscape phone to portrait tablet */
@media (max-width: 767px) {
  #DP--{{ section.id }} .dsgn-pck__newsletter__form-column {
    padding-left: 0;
    padding-right: 0;
  }

  #DP--{{ section.id }} .dsgn-pck__newsletter__content {
    padding-left: 0;
    padding-right: 0;
  }

  #DP--{{ section.id }} .dsgn-pck__newsletter__content::after {
    top: 100%;
    transform: translate(-50%, 0);
    left: 50%;
    width: 100%;
    height: 2px;
  }

  #DP--{{ section.id }} .dsgn-pck__flex > .dsgn-pck__column {
    flex: 1 0 auto;
    z-index: 3;
    width: 100%;
  }
}

/* Landscape phones and down */
@media (max-width: 480px) {
  #DP--{{ section.id }} {
    margin-top: {{ section.settings.outer_margin | divided_by: 2 }}px;
    margin-bottom: {{ section.settings.outer_margin | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__sizer {
    min-width: 70%;
    padding-top: {{ section.settings.inner_padding | divided_by: 2 }}px;
    padding-bottom: {{ section.settings.inner_padding | divided_by: 2 }}px;
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section.id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}
</style>

{%- comment -%} HTML {%- endcomment -%}
<section id="DP--{{ section.id }}" class="DP--{{ section.id }} dsgn-pck__newsletter dsgn-pck__section">
  <div class="dsgn-pck__background dsgn-pck__parallax">
    {%- if section.settings.show_background_image -%}
      {%- if section.settings.background_image != blank -%}
        <img class="dsgn-pck__parallax-img dsgn-pck__parallax-img--{{ section.id }}"
            src="{{ section.settings.image | img_url: '600x' }}"
            srcset="{{ background_srcset }}"
            sizes="100vw"
            alt="{{ section.settings.background_image.alt }}"
            loading="lazy"
            height="{{ section.settings.background_image.height }}"
            width="{{ section.settings.background_image.width }}">
      {%- else -%}
        <img class="dsgn-pck__parallax-img dsgn-pck__parallax-img--{{ section.id }}" src="https://source.unsplash.com/{{ placeholder_image_id }}/1600x800" alt="">
      {%- endif -%}
    {%- endif -%}
    <div class="dsgn-pck__sizer
                dsgn-pck__sizer--newsletter
                dsgn-pck__flex
                {% if section.settings.form_position == 'left' %}
                  dsgn-pck__flex-row-reverse
                {% endif %}">
      <div class="dsgn-pck__newsletter__content dsgn-pck__column dsgn-pck__flex dsgn-pck__justify-{{ section.settings.text_alignment }}" style="--dsgn-pck-animate: 0;">
        <div class="dsgn-pck__newsletter__inner-content" >
          {%- if section.settings.heading != blank -%}
            <h2 class="dsgn-pck__newsletter__heading dsgn-pck__heading ">
              {{ section.settings.heading }}
            </h2>
          {%- endif -%}
          {%- if section.settings.text != blank -%}
            <div class="dsgn-pck__newsletter__text dsgn-pck__text dsgn-pck__rte" >
              {{ section.settings.text }}
            </div>
          {%- endif -%}
        </div>
      </div>
      <div class="dsgn-pck__newsletter__form-column dsgn-pck__column dsgn-pck__flex dsgn-pck__align-center" style="--dsgn-pck-animate: 1;">
        {%- capture form_id -%}dsgn-pck__newsletter__form-{{ section.id }}{%- endcapture -%}
        {%- form 'customer', id: form_id, class: 'dsgn-pck__newsletter__form' -%}

          {%- comment -%} Error and success messages for submitted form {%- endcomment -%}
          <div class="dsgn-pck__newsletter__form-response">
            {%- if form.posted_successfully? -%}
              <p class="dsgn-pck__newsletter__form-reply--success">{{ 'success' | t }}</p>
            {%- elsif form.errors -%}
              {%- for field in form.errors -%}
                <p class="dsgn-pck__newsletter__form-reply--error">{{ field }} - {{ form.errors.messages[field] }}</p>
              {%- endfor -%}
            {%- endif -%}
          </div>

          {%- comment -%} Hidden newsletter fields {%- endcomment -%}
          <input type="hidden" name="contact[tags]" value="newsletter"/>
          <input type="hidden" name="challenge" value="false" />

          <div class="dsgn-pck__newsletter__form">
            <div class="dsgn-pck__newsletter__form-text">{{ section.settings.form_text }}</div>
            {%- if section.settings.show_first_name -%}
              <label class="dsgn-pck__visually-hidden" for="first-name-{{ section.id }}">{{ 'first_name' | t }}</label>
              <input class="dsgn-pck__newsletter_first-name" type="text" name="contact[first_name]" id="first-name-{{ section.id }}" placeholder="{{ 'first_name' | t }}" />
            {%- endif -%}
            {%- if section.settings.show_last_name -%}
              <label class="dsgn-pck__visually-hidden" for="last-name-{{ section.id }}">{{ 'last_name' | t }}</label>
              <input class="dsgn-pck__newsletter_last-name" type="text" name="contact[last_name]" id="last-name-{{ section.id }}" placeholder="{{ 'last_name' | t }}" />
            {%- endif -%}
            <label class="dsgn-pck__visually-hidden" for="email-{{ section.id }}">{{ 'email' | t }}</label>
            <input class="dsgn-pck__newsletter_email" type="email" name="contact[email]" required id="email-{{ section.id }}" placeholder="{{ 'email' | t }}" />
            <input class="dsgn-pck__newsletter__button dsgn-pck__button" type="submit" value="{{ 'submit' | t }}" />
          </div>

        {%- endform -%}
      </div>
    </div>
  </div>
</section>

{%- schema -%}
  {
    "name": "Newsletter with text",
    "class": "DP__newsletter",
    "settings": [
      {
        "type": "paragraph",
        "content": "Any customers who sign up will have an account created for them in Shopify. [View customers](/admin/customers?query=&accepts_marketing=1)"
      },
      {
        "type": "header",
        "content": "Content"
      },
      {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "Be the first to know."
      },
      {
        "type": "richtext",
        "id": "text",
        "label": "Text",
        "default": "<p>Use this space to explain the value of signing up for your mailing list. Whether it's deals, freebies, blog posts or sending out a downloadable PDF. Having an engaged and active mailing list is a must for any Shopify store.</p>"
      },
      {
        "type": "select",
        "id": "text_alignment",
        "label": "Text alignment",
        "default": "left",
        "options": [
          {
            "value": "left",
            "label": "Left"
          },
          {
            "value": "center",
            "label": "Center"
          },
          {
            "value": "right",
            "label": "Right"
          },
          {
            "value": "justify",
            "label": "Justify"
          }
        ]
      },
      {
        "type": "header",
        "content": "Form"
      },
      {
        "type": "text",
        "id": "form_text",
        "label": "Heading",
        "default": "Sign up for newsletter"
      },
      {
        "type": "checkbox",
        "id": "show_first_name",
        "label": "Show first name",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "show_last_name",
        "label": "Show last name",
        "default": false
      },
      {
        "type": "select",
        "id": "form_position",
        "label": "Form position",
        "default": "right",
        "options": [
          {
            "value": "left",
            "label": "Left"
          },
          {
            "value": "right",
            "label": "Right"
          }
        ]
      },
      {
        "type": "header",
        "content": "✏️ Text appearance"
      },
      {
        "type": "range",
        "id": "text_size",
        "label": "Text size",
        "min": 80,
        "max": 150,
        "step": 5,
        "default": 100,
        "unit": "%"
      },
      {
        "type": "checkbox",
        "id": "override_theme_font",
        "label": "Override default theme font",
        "default": true
      },
      {
        "type": "font_picker",
        "id": "heading_font",
        "label": "Heading",
        "default": "serif"
      },
      {
        "type": "font_picker",
        "id": "main_font",
        "label": "Text",
        "default": "sans-serif"
      },
      {
        "type": "header",
        "content": "🎨 Design"
      },
      {
        "type": "color",
        "id": "text_color",
        "label": "Text",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "id": "button_label_color",
        "label": "Button label",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "id": "button_background_color",
        "label": "Button background",
        "default": "#283144"
      },
      {
        "type": "color",
        "id": "background_color",
        "label": "Background",
        "default": "#687EAC"
      },
      {
        "type": "select",
        "id": "animation",
        "label": "Animation",
        "default": "fade-in",
        "options": [
          {
            "value": "fade-in",
            "label": "Fade-in"
          },
          {
            "value": "fade-in-left",
            "label": "Fade-in left"
          },
          {
            "value": "fade-in-right",
            "label": "Fade-in right"
          },
          {
            "value": "fade-in-up",
            "label": "Fade-in up"
          },
          {
            "value": "fade-in-down",
            "label": "Fade-in down"
          },
          {
            "value": "none",
            "label": "None"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "show_background_image",
        "label": "Show background image",
        "default": true
      },
      {
        "type": "image_picker",
        "id": "background_image",
        "label": "Background image",
        "info": "2000 x 700px recommended"
      },
      {
        "type": "select",
        "id": "focal_point",
        "label": "Image focal point",
        "info": "Used to keep the subject of your photo in view.",
        "default": "center center",
        "options": [
          {
            "value": "20% 0",
            "label": "Top left"
          },
          {
            "value": "top center",
            "label": "Top center"
          },
          {
            "value": "80% 0",
            "label": "Top right"
          },
          {
            "value": "20% 50%",
            "label": "Left"
          },
          {
            "value": "center center",
            "label": "Center"
          },
          {
            "value": "80% 50%",
            "label": "Right"
          },
          {
            "value": "20% 100%",
            "label": "Bottom left"
          },
          {
            "value": "bottom center",
            "label": "Bottom center"
          },
          {
            "value": "80% 100%",
            "label": "Bottom right"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "enable_parallax",
        "label": "Enable parallax scrolling",
        "default": false
      },
      {
        "type": "range",
        "id": "button_radius",
        "label": "Button border radius",
        "min": 0,
        "max": 50,
        "step": 5,
        "default": 0,
        "unit": "px"
      },
      {
        "type": "header",
        "content": "🖼 Layout"
      },
      {
        "type": "range",
        "id": "base_width",
        "label": "Size",
        "min": 60,
        "max": 100,
        "step": 5,
        "default": 90,
        "unit": "%"
      },
      {
        "type": "text",
        "id": "max_width",
        "label": "Maximum width",
        "placeholder": "eg. 1200px",
        "info": "Sets width constraint for content."
      },
      {
        "type": "range",
        "id": "inner_padding",
        "label": "Inner padding",
        "info": "Only applies to top and bottom.",
        "min": 0,
        "max": 100,
        "default": 40,
        "step": 5,
        "unit": "px"
      },
      {
        "type": "range",
        "id": "outer_margin",
        "label": "Outer margin",
        "info": "Only applies to top and bottom.",
        "min": 0,
        "max": 100,
        "default": 0,
        "step": 5,
        "unit": "px"
      },
      {
        "type": "header",
        "content": "🚨 Advanced"
      },
      {
        "type": "textarea",
        "id": "custom_css",
        "label": "CSS"
      },
      {
        "type": "textarea",
        "id": "mobile_custom_css",
        "label": "Mobile CSS",
        "info": "Applied on screens less than 480px."
      }
    ],
    "presets": [
      {
        "name": "Newsletter with text",
        "category": "All Design Packs 🎒",
        "settings": {

        }
      }
    ],
    "locales": {
      "en": {
        "first_name": "First name",
        "last_name": "Last name",
        "success": "Thanks for contacting us. We'll get back to you as soon as possible.",
        "email": "Email address",
        "submit": "Subscribe"
      }
    }
  }
{%- endschema -%}
{%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{section.id}}">
  {
    "id": {{ section.id | json }},
    "animation": {{ section.settings.animation | json }},
    "focal_point": {{ section.settings.focal_point | json }},
    "enable_parallax": {{ section.settings.enable_parallax | json }}
  }
</script>
{%- comment -%} External scripts {%- endcomment -%}
<script data-dsgn-pck-external-js="{{section.id}}" src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/jarallax.min.js?v=1638490357"></script>
{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{section.id}}">
(function(){

  const designPack = {
    settings: {},
    animateSection: function(entries, observer){
      // Target the first entry available.
      let observedSection = entries[0];
      if (observedSection.isIntersecting) {
        observedSection.target.classList.add('dsgn-pck__animation-applied');
      }
    },
    enableParallax: function(section){
      jarallax(section, {
        speed: 0.2,
        imgElement: `.dsgn-pck__parallax-img--${this.settings.id}`,
        imgPosition: this.settings.focal_point
      });
    },
    disableParallax: function(section){
      jarallax(section, 'destroy');
    },
    load: function(section){

      if (this.settings.animation !== 'none'){
        const options = {
          root: null,
          rootMargin: '0px',
          threshold: 0.5
        };
        // Construct Intersection Observer.
        const observer = new IntersectionObserver( this.animateSection, options );
        // Observe if element is present.
        if (section) {
          observer.observe(section);
        }
      }

      if (this.settings.enable_parallax == true){
        this.enableParallax(section);
      }
    },
    unload: function(section){
      if (this.settings.enable_parallax == true){
        this.disableParallax(section);
      }
      section.classList.remove('dsgn-pck__animation-applied')
    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{section.id}}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
