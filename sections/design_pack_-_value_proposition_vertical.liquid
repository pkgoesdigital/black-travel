{%- comment -%}
{
  "pack_name": "Value Proposition - Vertical",
  "pack_author": "Design Packs",
  "pack_version": "1.0.0",
  "pack_folder": "section",
  "pack_type": "dynamic",
  "pack_tags": ["section", "animation"],
  "pack_description": ""
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- if content_for_header contains 'design_packs_file.js' -%}
{%- comment -%} Color: check if color is set to transparent {%- endcomment -%}
{%- assign background_alpha = section.settings.background_color | color_extract: 'alpha' -%}

{%- comment -%} Color: color filter {%- endcomment -%}
{%- capture color_filter -%}
{%- if section.settings.color_filter == 'grayscale' -%}
  grayscale(100%);
{%- elsif section.settings.color_filter == 'sepia' -%}
  sepia(100%) contrast(1.2);
{%- endif -%}
{% endcapture %}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{%- comment -%} Text: custom font_picker values {%- endcomment -%}
{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  {%- capture main_font -%}{{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }}{%- endcapture -%}
  {%- capture heading_font -%}{{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }}{%- endcapture -%}
{%- endif -%}

#DP--{{ section.id }} {
  background: {%- if background_alpha != 0 -%}{{ section.settings.background_color }}{%- endif -%};
}

#DP--{{ section.id }} .dsgn-pck__value-prop-vertical__heading {
  text-transform: none;
  text-align: center;
  margin: 0 0 1.5em;
  font-family: {{ main_font }};
  color: {{ section.settings.heading_color }};
  font-size: clamp(16px, {{ section.settings.text_size | times: 0.015 }}em, 2em);
  {%- if section.settings.override_theme_font != blank -%}
  font-family: {{ heading_font }};
  font-weight: {{ section.settings.heading_font.weight }};
  font-style: {{ section.settings.heading_font.style }};
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__value-prop-vertical__icons {
  justify-content: center;
  flex-wrap: wrap;
}

#DP--{{ section.id }} .dsgn-pck__flex-item {
  height: auto;
}

#DP--{{ section.id }} .dsgn-pck__value-prop-vertical__inner-content {
  height: 100%;
  display: grid;
  grid-template-columns: 1fr 5fr;
  grid-gap: 2em;
  justify-content: center;
  align-items: center;
  padding: 5px;
  padding-top: 1em;
  padding-bottom: 1em;
  /* text-align: center;*/
  position: relative;
  overflow: hidden;
}

#DP--{{ section.id }} .dsgn-pck__value-prop-vertical__inner-content p {
  font-size: clamp(12px, {{ section.settings.text_size | times: 0.008 }}em, 1.5em);
  color: {{ section.settings.text_color }};
  {%- if section.settings.override_theme_font != blank -%}
    font-family: {{ main_font }};
    font-weight: {{ section.settings.main_font.weight }};
    font-style: {{ section.settings.main_font.style }};
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper {
  width: {{ section.settings.icon_size }}%;
  display: block;
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper svg {
  width: 100%;
  fill: {{ section.settings.text_color }}
}

#DP--{{ section.id }} .dsgn-pck__value-prop-vertical__item img {
  width: 100%;
  object-fit: contain;
  filter: {{ color_filter }};
}

#DP--{{ section.id }} .dsgn-pck__value-prop-vertical__item-heading {
  position: relative;
  /*text-align: center;*/
  margin: 0;
  margin-bottom: 1em;
  font-weight: normal;
  line-height: 1.2;
  color: {{ section.settings.text_color }};
  font-size: clamp(16px, {{ section.settings.text_size | times: 0.013 }}em, 2em);
  {%- if section.settings.override_theme_font != blank -%}
    font-family: {{ heading_font }};
    font-weight: {{ section.settings.heading_font.weight }};
    font-style: {{ section.settings.heading_font.style }};
  {%- endif -%}
}

/* Animation */
{%- if section.settings.animation != 'none' -%}
  #DP--{{ section.id }}.dsgn-pck__animation-applied [style*="--dsgn-pck-animate"] {
    /* animation-duration: 0.5s; */
    /* --dsgn-pck-animation-multiplier: 1s; */
    animation-name: dsgn-pck__animation--{{ section.settings.animation }};
  }
{%- else -%}
  #DP--{{ section.id }} [style*="--dsgn-pck-animate"] {
    opacity: 1;
  }
{% endif %}

/* Layout */
#DP--{{ section.id }} {
  margin-top: {{ section.settings.outer_margin }}px;
  margin-bottom: {{ section.settings.outer_margin }}px;
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
  width: {{ section.settings.base_width }}%;
  max-width: {{ max_width }};
}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Large desktop */
@media (min-width: 1200px) {

}

/* Portrait tablet to landscape and desktop */
@media (min-width: 768px) and (max-width: 979px) {

}

/* Landscape phone to portrait tablet */
@media (max-width: 767px) {
  #DP--{{ section.id }} .dsgn-pck__value-prop-vertical__inner-content {
    grid-template-columns: 1fr;
    justify-items: center;
  }

  #DP--{{ section.id }} .dsgn-pck__image__wrapper {
    width: {{ section.settings.mobile_icon_size }}%;
    display: block;
  }

  #DP--{{ section.id }} .dsgn-pck__value-prop-vertical__item-heading {
    text-align: center;
  }
}

/* Landscape phones and down */
@media (max-width: 480px) {
  #DP--{{ section.id }} {
    margin-top: {{ section.settings.outer_margin | divided_by: 2 }}px;
    margin-bottom: {{ section.settings.outer_margin | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__sizer {
    min-width: 70%;
    padding-top: {{ section.settings.inner_padding | divided_by: 2 }}px;
    padding-bottom: {{ section.settings.inner_padding | divided_by: 2 }}px;
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section.id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}
</style>

{%- comment -%} HTML {%- endcomment -%}
<section id="DP--{{ section.id }}" class="DP--{{ section.id }} dsgn-pck__value-prop-vertical dsgn-pck__section" {%- if section.settings.animation != 'none' -%}data-animated-section{%- endif -%}>
  <div class="dsgn-pck__sizer
              dsgn-pck__sizer--value-prop-vertical">
    {%- if section.settings.title != blank -%}
      <h2 class="dsgn-pck__value-prop-vertical__heading ">{{ section.settings.title }}</h2>
    {%- endif -%}
    <div class="dsgn-pck__value-prop-vertical__icons dsgn-pck__flex">
      {%- for block in section.blocks -%}
        {%- comment -%} CSS {%- endcomment -%}
        <style>
          .dsgn-pck__block-{{ block.id }} img {
            object-position: {{ block.settings.focal_point }};
          }
        </style>
        {%- comment -%} Images: responsive image sizes {%- endcomment -%}
        {%- capture srcset -%}
          {{ block.settings.image | img_url: '5000x' }} 5000w,
          {{ block.settings.image | img_url: '4500x' }} 4500w,
          {{ block.settings.image | img_url: '4000x' }} 4000w,
          {{ block.settings.image | img_url: '3500x' }} 3500w,
          {{ block.settings.image | img_url: '3000x' }} 3000w,
          {{ block.settings.image | img_url: '2500x' }} 2500w,
          {{ block.settings.image | img_url: '2000x' }} 2000w,
          {{ block.settings.image | img_url: '1800x' }} 1800w,
          {{ block.settings.image | img_url: '1600x' }} 1600w,
          {{ block.settings.image | img_url: '1400x' }} 1400w,
          {{ block.settings.image | img_url: '1200x' }} 1200w,
          {{ block.settings.image | img_url: '1000x' }} 1000w,
          {{ block.settings.image | img_url: '800x' }} 800w,
          {{ block.settings.image | img_url: '600x' }} 600w,
          {{ block.settings.image | img_url: '400x' }} 400w,
          {{ block.settings.image | img_url: '200x' }} 200w
        {%- endcapture -%}
        {%- capture placeholder_image -%}
          <svg xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" viewBox="0 0 100 100" x="0px" y="0px"><title>icons</title><g data-name="24. circle in circle"><path d="M88.47,50C88.19,66.07,78.32,80.78,63,86.23a38.48,38.48,0,0,1-46-56A38.85,38.85,0,0,1,57.82,12.32C75.7,16,88.16,32,88.47,50c0,1.93,3,1.93,3,0A42,42,0,0,0,64.41,11.11a41.48,41.48,0,0,0-50,60.19A41.89,41.89,0,0,0,57.29,90.83c19.79-3.48,33.84-21,34.19-40.83C91.5,48.07,88.5,48.07,88.47,50Z"/><path d="M77.63,50C77.28,65.05,65.32,77.63,50,77.63A27.89,27.89,0,0,1,22.37,50,27.88,27.88,0,0,1,50,22.37c15.33,0,27.28,12.55,27.63,27.63,0,1.93,3,1.93,3,0A31.09,31.09,0,0,0,60.83,21.35a30.88,30.88,0,0,0-34.62,9.37C8.63,52.48,28.32,85.28,55.78,80.08,70.27,77.33,80.29,64.5,80.63,50,80.67,48.07,77.67,48.07,77.63,50Z"/></g></svg>
        {%- endcapture -%}
        <div class=" dsgn-pck__value-prop-vertical__item dsgn-pck__block-{{ block.id }}" {{ block.shopify_attributes }} style="--dsgn-pck-animate: {{ forloop.index }};">
            <div class="dsgn-pck__flex-item dsgn-pck__value-prop-vertical__inner-content">
            {%- comment -%} Icon {%- endcomment -%}
              {%- if block.settings.link != blank -%}
                <a href="{{ block.settings.link }}">
              {%- endif -%}
              {%- if block.settings.image != blank -%}
                <picture class="dsgn-pck__image__wrapper">
                  <svg viewBox="0 0 {{ block.settings.image.width }} {{ block.settings.image.height }}"></svg>
                  <img src="{{ block.settings.image | img_url: '600x' }}"
                      srcset="{{ srcset }}"
                      sizes="50vw"
                      alt="{{ section.settings.image.alt }}"
                      loading="lazy"
                      height="{{ section.settings.image.height }}"
                      width="{{ section.settings.image.width }}"
                      style="transform: scale({{ block.settings.scale }});">
                </picture>
              {%- else -%}
                <picture class="dsgn-pck__image__wrapper dsgn-pck__flex dsgn-pck__justify-center">
                  {{ placeholder_image | strip }}
                </picture>
              {%- endif -%}
              {%- if block.settings.link != blank -%}
                </a>
              {%- endif -%}
              {%- comment -%} End Icon {%- endcomment -%}
              <div>
                {%- if block.settings.title != blank -%}
                  <h3 class="dsgn-pck__value-prop-vertical__item-heading">{{ block.settings.title }}</h3>
                {%- endif -%}
                <div>{{ block.settings.text }}</div>
              </div>
            </div>

        </div>
      {%- endfor -%}
    </div>
  </div>
</section>
{%- endcapture -%}
{{ minify | strip_newlines }}
{%- else -%}
  {%- if request.design_mode -%}
  <div class="dsgn-pck__no-app-warning">
    <div class="dsgn-pck__no-app-warning-background">
    </div>
    <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
      <p><strong>WARNING!</strong> This section or template will not display properly without the <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a> app installed. Please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with any questions.</p>
    </div>
  </div>
  {%- endif -%}
{%- endif -%}

{%- schema -%}
  {
    "name": "Value icons - vertical",
    "class": "DP__value-prop-vertical",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Heading",
        "default": "Our company values"
      },
      {
        "type": "range",
        "id": "icon_size",
        "label": "Icon size",
        "default": 100,
        "min": 20,
        "max": 100,
        "step": 5,
        "unit": "%"
      },
      {
        "type": "header",
        "content": "✏️ Text appearance"
      },
      {
        "type": "range",
        "id": "text_size",
        "label": "Text size",
        "min": 80,
        "max": 150,
        "step": 5,
        "default": 100,
        "unit": "%"
      },
      {
        "type": "checkbox",
        "id": "override_theme_font",
        "label": "Override default theme font",
        "default": true
      },
      {
        "type": "font_picker",
        "id": "heading_font",
        "label": "Heading",
        "default": "serif"
      },
      {
        "type": "font_picker",
        "id": "main_font",
        "label": "Text",
        "default": "sans-serif"
      },
      {
        "type": "header",
        "content": "🎨 Design"
      },
      {
        "type": "color",
        "id": "heading_color",
        "label": "Heading",
        "default": "#000000"
      },
      {
        "type": "color",
        "id": "text_color",
        "label": "Icon text",
        "default": "#000000"
      },
      {
        "type": "color",
        "id": "background_color",
        "label": "Background",
        "default": "#FFFFFF"
      },
      {
        "type": "select",
        "id": "color_filter",
        "label": "Color filter",
        "default": "none",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "grayscale",
            "label": "Grayscale"
          },
          {
            "value": "sepia",
            "label": "Sepia"
          }
        ]
      },
      {
        "type": "select",
        "id": "animation",
        "label": "Animation",
        "default": "fade-in",
        "options": [
          {
            "value": "fade-in",
            "label": "Fade-in"
          },
          {
            "value": "fade-in-left",
            "label": "Fade-in left"
          },
          {
            "value": "fade-in-right",
            "label": "Fade-in right"
          },
          {
            "value": "fade-in-up",
            "label": "Fade-in up"
          },
          {
            "value": "fade-in-down",
            "label": "Fade-in down"
          },
          {
            "value": "none",
            "label": "None"
          }
        ]
      },
      {
        "type": "header",
        "content": "📱 Mobile"
      },
      {
        "type": "range",
        "id": "mobile_icon_size",
        "label": "Mobile icon size",
        "default": 50,
        "min": 20,
        "max": 100,
        "step": 5,
        "unit": "%"
      },
      {
        "type": "header",
        "content": "🖼 Layout"
      },
      {
        "type": "range",
        "id": "base_width",
        "label": "Size",
        "min": 60,
        "max": 100,
        "step": 5,
        "default": 85,
        "unit": "%"
      },
      {
        "type": "text",
        "id": "max_width",
        "label": "Maximum width",
        "placeholder": "eg. 1200px",
        "info": "Sets width constraint for content."
      },
      {
        "type": "range",
        "id": "inner_padding",
        "label": "Inner padding",
        "info": "Only applies to top and bottom.",
        "min": 0,
        "max": 100,
        "default": 40,
        "step": 5,
        "unit": "px"
      },
      {
        "type": "range",
        "id": "outer_margin",
        "label": "Outer margin",
        "info": "Only applies to top and bottom.",
        "min": 0,
        "max": 100,
        "default": 0,
        "step": 5,
        "unit": "px"
      },
      {
        "type": "header",
        "content": "🚨 Advanced"
      },
      {
        "type": "textarea",
        "id": "custom_css",
        "label": "CSS"
      },
      {
        "type": "textarea",
        "id": "mobile_custom_css",
        "label": "Mobile CSS",
        "info": "Applied on screens less than 480px."
      }
    ],
    "blocks": [
      {
        "type": "icon",
        "name": "Icon",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Icon"
          },
          {
            "type": "range",
            "id": "scale",
            "label": "Scale",
            "min": 0.5,
            "max": 2.5,
            "step": 0.1,
            "default": 1
          },
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Unique value"
          },
          {
            "type": "richtext",
            "id": "text",
            "label": "Text",
            "default": "<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Officiis accusantium ipsa, illum tempore deleniti sunt quia quam excepturi ut modi sed cupiditate, dignissimos sint quasi accusamus! Recusandae.</p>"
          },
          {
            "type": "url",
            "id": "link",
            "label": "Link"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Value icons - vertical",
        "category": "All Design Packs 🎒",
        "blocks": [
          {
            "type": "icon",
            "settings": {
              "title": "Sustainable and eco-friendly"
            }
          },
          {
            "type": "icon",
            "settings": {
              "title": "Donation made from every purchase"
            }
          },
          {
            "type": "icon",
            "settings": {
              "title": "Family-owned and operated"
            }
          }
        ]
      }
    ]
  }
{%- endschema -%}
{%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{section.id}}">
  {
    "id": {{ section.id | json }},
    "animation": {{ section.settings.animation | json }}
  }
</script>
{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{section.id}}">
(function(){

  const designPack = {
    settings: {},
    animateSection: function(entries, observer){
      // Target the first entry available.
      let observedSection = entries[0];
      if (observedSection.isIntersecting) {
        observedSection.target.classList.add('dsgn-pck__animation-applied');
      }
    },
    load: function(section){
      if (this.settings.animation !== 'none'){
        const options = {
          root: null,
          rootMargin: '0px',
          threshold: 0
        };
        // Construct Intersection Observer.
        const observer = new IntersectionObserver( this.animateSection, options );
        // Observe if element is present.
        if (section) {
          observer.observe(section);
        }
      }
    },
    unload: function(section){
      section.classList.remove('dsgn-pck__animation-applied')
    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{section.id}}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
